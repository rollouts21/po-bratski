# Generated by Django 5.2 on 2025-05-19 07:18

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone_number', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message="Номер телефона должен быть в формате: '+79991234567'", regex='^\\+?1?\\d{9,15}$')], verbose_name='Номер телефона')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('full_name', models.CharField(max_length=150, verbose_name='ФИО')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата регистрации')),
                ('city', models.CharField(blank=True, help_text='Город доставки', max_length=100, verbose_name='Город')),
                ('street', models.CharField(blank=True, help_text="Название улицы без слова 'улица'", max_length=100, verbose_name='Улица')),
                ('house', models.CharField(blank=True, help_text='Формат: 14к2, 34/2, 12стр5', max_length=20, verbose_name='Дом')),
                ('entrance', models.PositiveIntegerField(blank=True, null=True, verbose_name='Подъезд')),
                ('floor', models.PositiveIntegerField(blank=True, null=True, verbose_name='Этаж')),
                ('apartment', models.CharField(blank=True, help_text='Номер квартиры или офиса', max_length=20, verbose_name='Квартира')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
